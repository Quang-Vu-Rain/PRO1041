package PL.GUI;

import BUS.IServices.*;
import BUS.IServices.IQLKhachHangServices;
import BUS.Services.QLKhachHangServices;
import BUS.Utils.MsgBox;
import DAL.Services.KhachHangServices;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Frm_KhachHang extends javax.swing.JFrame {

    IQLKhachHangServices _iKhachHang = new QLKhachHangServices();
    KhachHangServices kh = new KhachHangServices();
    int _index = 0;
    ImageIcon iconTick = new ImageIcon("src\\PL\\Icon\\Tick.png");
    ImageIcon iconTrash = new ImageIcon("src\\PL\\Icon\\Trash.png");
    ImageIcon iconError = new ImageIcon("src\\PL\\Icon\\Problem.png");

    public Frm_KhachHang() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        tblkhachhang.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
//        tblkhachhang.getTableHeader().setBackground(new Color(34, 47, 62));
//        tblkhachhang.getTableHeader().setForeground(new Color(255, 255, 255));
        filltoTable();
        showForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        txtage = new javax.swing.JTextField();
        txtcccd = new javax.swing.JTextField();
        txtsdt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtnotes = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblkhachhang = new javax.swing.JTable();
        btnthem = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        rdonam = new javax.swing.JRadioButton();
        rdonu = new javax.swing.JRadioButton();
        txtsearch = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnexportexcel = new javax.swing.JButton();
        btnimportexel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ KHÁCH HÀNG");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(10, 189, 227));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tên khách hàng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Mã khách hàng");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CCCD");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Số điện thoại");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tuổi");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Giới tính");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Ghi chú");

        txtid.setEditable(false);
        txtid.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtid.setBorder(null);

        txtname.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtname.setBorder(null);

        txtage.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtage.setBorder(null);

        txtcccd.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtcccd.setBorder(null);

        txtsdt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtsdt.setBorder(null);

        txtnotes.setColumns(20);
        txtnotes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtnotes.setLineWrap(true);
        txtnotes.setRows(5);
        txtnotes.setBorder(null);
        jScrollPane1.setViewportView(txtnotes);

        tblkhachhang.setAutoCreateRowSorter(true);
        tblkhachhang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblkhachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Tuổi", "Giới tính", "Số điện thoại", "Số CCCD", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblkhachhang.setGridColor(new java.awt.Color(255, 255, 255));
        tblkhachhang.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tblkhachhang.setRowHeight(24);
        tblkhachhang.setSelectionBackground(new java.awt.Color(10, 189, 227));
        tblkhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblkhachhangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblkhachhang);

        btnthem.setBackground(new java.awt.Color(34, 47, 62));
        btnthem.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnthem.setForeground(new java.awt.Color(255, 255, 255));
        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnsua.setBackground(new java.awt.Color(34, 47, 62));
        btnsua.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnsua.setForeground(new java.awt.Color(255, 255, 255));
        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnxoa.setBackground(new java.awt.Color(34, 47, 62));
        btnxoa.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnxoa.setForeground(new java.awt.Color(255, 255, 255));
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnclear.setBackground(new java.awt.Color(34, 47, 62));
        btnclear.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnclear.setForeground(new java.awt.Color(255, 255, 255));
        btnclear.setText("Làm mới");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        rdonam.setBackground(new java.awt.Color(10, 189, 227));
        buttonGroup1.add(rdonam);
        rdonam.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        rdonam.setSelected(true);
        rdonam.setText("Nam");

        rdonu.setBackground(new java.awt.Color(10, 189, 227));
        buttonGroup1.add(rdonu);
        rdonu.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        rdonu.setText("Nữ");

        txtsearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtsearch.setBorder(null);
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tìm kiếm theo mã");

        btnexportexcel.setBackground(new java.awt.Color(34, 47, 62));
        btnexportexcel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnexportexcel.setForeground(new java.awt.Color(255, 255, 255));
        btnexportexcel.setText("Export Excel");
        btnexportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexportexcelActionPerformed(evt);
            }
        });

        btnimportexel.setBackground(new java.awt.Color(34, 47, 62));
        btnimportexel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnimportexel.setForeground(new java.awt.Color(255, 255, 255));
        btnimportexel.setText("Import Excel");
        btnimportexel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportexelActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(10, 189, 227));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Quản Lý Khách Hàng");
        jPanel2.add(jLabel9);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtsdt)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcccd)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnthem)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnsua))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnexportexcel)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnimportexel))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnxoa)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnclear))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(26, 26, 26)
                                .addComponent(rdonam)
                                .addGap(18, 18, 18)
                                .addComponent(rdonu))
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(txtname)
                            .addComponent(txtage)
                            .addComponent(txtid))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtsearch))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnclear, btnexportexcel, btnsua, btnthem, btnxoa});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rdonam)
                            .addComponent(rdonu))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcccd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnthem)
                            .addComponent(btnsua))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnxoa)
                            .addComponent(btnclear))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnexportexcel)
                            .addComponent(btnimportexel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtsearch)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtage, txtcccd, txtid, txtname, txtsdt, txtsearch});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        try {
            if (checkAddAll() == false) {
                return;
            } else {
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn thêm khách hàng ?");
                if (choice != JOptionPane.YES_OPTION) {
                    return;
                }
                _iKhachHang.add(txtid, txtname, txtage, rdonam, txtsdt, txtcccd, txtnotes);
                _iKhachHang.fillToTable(tblkhachhang);
                JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công !", "Thông báo", 0, iconTick);
                clear();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Không thể thêm mới!");
        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        try {
            if (checkEditAll() == false) {
                return;
            } else {
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cập nhật thông tin khách hàng ?");
                if (choice != JOptionPane.YES_OPTION) {
                    return;
                }
                _iKhachHang.edit(txtid, txtname, txtage, rdonam, txtsdt, txtcccd, txtnotes);
                _iKhachHang.fillToTable(tblkhachhang);
                JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thành công !", "Thông báo", 0, iconTick);
                clear();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Không thể sửa!");
        }
    }//GEN-LAST:event_btnsuaActionPerformed

    private void tblkhachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblkhachhangMouseClicked
        try {
            _index = tblkhachhang.getSelectedRow();
            showForm();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblkhachhangMouseClicked

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        clear();
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        try {
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa khách hàng ?");
            if (choice != JOptionPane.YES_OPTION) {
                return;
            }
            _iKhachHang.delete(txtid);
            _iKhachHang.fillToTable(tblkhachhang);
            JOptionPane.showMessageDialog(this, "Xóa khách hàng thành công !", "Thông báo", 0, iconTrash);
            clear();
        } catch (Exception e) {
            MsgBox.alert(this, "Không thể xóa!");
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        fillSearch();
    }//GEN-LAST:event_txtsearchKeyReleased

    private void btnexportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexportexcelActionPerformed
        exportExcel();
    }//GEN-LAST:event_btnexportexcelActionPerformed

    private void btnimportexelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportexelActionPerformed
        importExcel();
    }//GEN-LAST:event_btnimportexelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Frm_KhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Frm_KhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Frm_KhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Frm_KhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_KhachHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnexportexcel;
    private javax.swing.JButton btnimportexel;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btnxoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JRadioButton rdonam;
    private javax.swing.JRadioButton rdonu;
    private javax.swing.JTable tblkhachhang;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtcccd;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextArea txtnotes;
    private javax.swing.JTextField txtsdt;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables

    private void filltoTable() {
        _iKhachHang.fillToTable(tblkhachhang);
    }

    private void showForm() {
        txtid.setText(tblkhachhang.getValueAt(_index, 0).toString());
        txtname.setText(tblkhachhang.getValueAt(_index, 1).toString());
        txtage.setText(tblkhachhang.getValueAt(_index, 2).toString());
        String gt = tblkhachhang.getValueAt(_index, 3).toString();
        if (gt.equals("Nam")) {
            rdonam.setSelected(true);
        } else {
            rdonu.setSelected(true);
        }
        txtsdt.setText(tblkhachhang.getValueAt(_index, 4).toString());
        txtcccd.setText(tblkhachhang.getValueAt(_index, 5).toString());
        txtnotes.setText(tblkhachhang.getValueAt(_index, 6).toString());
    }

    private boolean checkAddAll() {
        String makh = txtid.getText();
        String tenkh = txtname.getText();
        int tuoi;
        String cccd = txtcccd.getText();
        String sdt = txtsdt.getText();
        String ghichu = txtnotes.getText();
        try {
            tuoi = Integer.parseInt(txtage.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng tuổi !", "Thông báo", 0, iconError);
            return false;
        }
        if (makh.length() == 0 || tenkh.length() == 0 || cccd.length() == 0 || ghichu.length() == 0 || sdt.length() == 0 || txtage.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống dữ liệu !", "Thông báo", 0, iconError);
            return false;
        }
        if (tuoi < 0 || tuoi > 150) {
            JOptionPane.showMessageDialog(this, "Tuổi không phù hợp !", "Thông báo", 0, iconError);
            return false;
        }
        if (kh.getListKhachHangByID(makh) != null) {
            JOptionPane.showMessageDialog(this, "Mã khách hàng đã tồn tại !", "Thông báo", 0, iconError);
            return false;
        }
        return true;
    }

    private boolean checkEditAll() {
        String makh = txtid.getText();
        String tenkh = txtname.getText();
        int tuoi;
        String cccd = txtcccd.getText();
        String sdt = txtsdt.getText();
        String ghichu = txtnotes.getText();
        if (makh.length() == 0 || tenkh.length() == 0 || cccd.length() == 0 || ghichu.length() == 0 || sdt.length() == 0 || txtage.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống dữ liệu !", "Thông báo", 0, iconError);
            return false;
        }
        try {
            tuoi = Integer.parseInt(txtage.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng tuổi !", "Thông báo", 0, iconError);
            return false;
        }
        if (tuoi < 0 || tuoi > 150) {
            JOptionPane.showMessageDialog(this, "Tuổi không phù hợp !", "Thông báo", 0, iconError);
            return false;
        }
        return true;
    }

    private void clear() {
        txtage.setText("");
        txtcccd.setText("");
        txtid.setText("");
        txtname.setText("");
        txtnotes.setText("");
        txtsdt.setText("");
        rdonam.setSelected(true);
        txtid.setEditable(true);
    }

    private void fillSearch() {
        _iKhachHang.filltoSearch(tblkhachhang, txtsearch);
    }

    private void exportExcel() {
        JFileChooser jf = new JFileChooser();
        // Chỉ hiển thị các file excel
        FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xslm");
        jf.setFileFilter(excelFileNameExtensionFilter);
        int chon = jf.showSaveDialog(this);
        if (chon == JFileChooser.APPROVE_OPTION) {
            String filename = jf.getSelectedFile().getAbsolutePath();
            try {
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("customers");
                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tblkhachhang.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tblkhachhang.getColumnName(i));
                }
                for (int j = 0; j < tblkhachhang.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < tblkhachhang.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tblkhachhang.getValueAt(j, k) != null) {
                            cell.setCellValue(tblkhachhang.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(filename + ".xlsx"));
                wb.write(out);
                wb.close();
                out.close();
                JOptionPane.showMessageDialog(this, "Export file thành công !", "Thông báo", 0, iconTick);
            } catch (FileNotFoundException e) {
                System.out.println(e);
            } catch (IOException io) {
                System.out.println(io);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn đã hủy export file !", "Thông báo", 0, iconError);
        }
    }

    private void importExcel() {
        DefaultTableModel model = (DefaultTableModel) tblkhachhang.getModel();
        model.setRowCount(0);
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportWb = null;
        JFileChooser jf = new JFileChooser();
        // Chỉ hiển thị các file excel
        FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xslm");
        jf.setFileFilter(excelFileNameExtensionFilter);
        int choice = jf.showOpenDialog(null);
        if (choice == JFileChooser.APPROVE_OPTION) {
            try {
                File excelFile = jf.getSelectedFile().getAbsoluteFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportWb = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportWb.getSheetAt(0);

                for (int i = 1; i < excelSheet.getLastRowNum() + 1; i++) {
                    XSSFRow excelRow = excelSheet.getRow(i);
                    XSSFCell makh = excelRow.getCell(0);
                    XSSFCell tenkh = excelRow.getCell(1);
                    XSSFCell tuoi = excelRow.getCell(2);
                    XSSFCell gioitinh = excelRow.getCell(3);
                    XSSFCell sdt = excelRow.getCell(4);
                    XSSFCell cccd = excelRow.getCell(5);
                    XSSFCell ghichu = excelRow.getCell(6);
                    model.addRow(new Object[]{
                        makh, tenkh, tuoi, gioitinh, sdt, cccd, ghichu
                    });
                }
                JOptionPane.showMessageDialog(this, "Import file thành công !", "Thông báo", 0, iconTick);
            } catch (FileNotFoundException e) {
                System.out.println(e);
            } catch (IOException io) {
                System.out.println(io);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn đã hủy import file !", "Thông báo", 0, iconError);
        }
    }
}
