/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PL.GUI;

import DAL.Entities.NhanVien;
import DAL.Services.NhanVienServices;
import java.util.Date;
import java.util.Properties;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author Cu Gau
 */
public class Frm_QuenMatKhau extends javax.swing.JFrame {

    /**
     * Creates new form Frm_QuenMatKhau
     */
    public Frm_QuenMatKhau() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtManv = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUÊN MẬT KHẨU");

        txtManv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManvActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã Nhân Viên:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 153));
        jLabel2.setText("Quên Mật khẩu");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 153, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PL/Icon/Brick house.png"))); // NOI18N
        jButton1.setText("Gửi Mã");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtManv, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtManvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManvActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (check()) {
            guima();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_QuenMatKhau().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtManv;
    // End of variables declaration//GEN-END:variables
    NhanVienServices daonv = new NhanVienServices();

    private void guima() {
        String manv = txtManv.getText();
        NhanVien nv = daonv.getListNhanVienByID(manv);
        if (nv == null) {
            JOptionPane.showMessageDialog(this, "không có mã nhân viên này");
            txtManv.requestFocus();
        } else {
            Properties prop = new Properties();
            prop.put("mail.smtp.host", "smtp.gmail.com");
            prop.put("mail.smtp.port", "587");
            prop.put("mail.smtp.auth", "true");
            prop.put("mail.smtp.starttls.enable", "true");
//        prop.put("mail.stmp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
//        prop.put("mail.smtp.socketFactory.fallback", "false");
            String username = "tapdoankhachsanpt102@gmail.com";
            String password = "Pt102102";
            Session session = Session.getInstance(prop,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                }
            });
            try {

                String nguoiNhan = nv.getEmail();

                String matKhau = nv.getMaKhau();
                Message message = new MimeMessage(session);
                message.setFrom(new InternetAddress(username));
                message.setRecipients(
                        Message.RecipientType.TO,
                        InternetAddress.parse(nguoiNhan));
                message.setSubject("Tập Đoàn Phương Tổ");
                message.setText(matKhau);

                Transport.send(message);
                JOptionPane.showMessageDialog(null, "nhận mật khẩu từ Email chính chủ", "Message", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            } catch (MessagingException e) {
                e.printStackTrace();
            }

//           Properties config = new Properties();
//           config.setProperty("mail.smtp.host","smtp.gmail.com");
//           config.setProperty("mail.smtp.post","465");
//           config.setProperty("mail.smtp.starttls.enable","true");
//           config.setProperty("mail.smtp.auth","true");
//           config.setProperty("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");
//           config.setProperty("mail.smtp.socketFactory.fallback","false");
//           
//           Authenticator authenticator = new Authenticator() {
//               @Override
//               protected PasswordAuthentication getPasswordAuthentication(){
//                   String email = "tapdoankhachsanpt102@gmail.com";
//                   String pass = "Pt102102";
//                   return new PasswordAuthentication(email, pass);
//               }
//           };
//
//            try {
//                String name = "Nam";
//                String email = "tapdoankhachsanpt102@gmail.com";
//                String emailto = nv.getEmail();
//                String subject = "tập đoàn phương tổ";
//                String body = nv.getMaKhau();
//               
//                Session session = Session.getInstance(config, authenticator);
//                MimeMessage mail = new MimeMessage(session);
//                InternetAddress sender = new InternetAddress(email, name, "utf-8");
//                mail.setFrom(sender);
//                mail.setReplyTo(new InternetAddress[]{sender});
//                mail.addRecipients(Message.RecipientType.TO, emailto);
//                mail.setSubject(subject, "utf-8");
//                mail.setContent(body, "text/html; charset=utf-8");
//                mail.setSentDate(new Date());
//                 Transport.send(mail);
//                 JOptionPane.showMessageDialog(this, "nhận mật khẩu từ email");
//            } catch (Exception e) {
//                throw  new RuntimeException(e);
//            }
        }
    }

    boolean check() {
        if (txtManv.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "nhập mã nhân viên");
            txtManv.requestFocus();
            return false;
        }
        return true;
    }
}
