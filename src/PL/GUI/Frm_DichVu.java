package PL.GUI;

import BUS.IServices.IQLAllDichVuServices;
import BUS.IServices.IQLDichVuServices;
import BUS.Services.QLAllDichVuServices;
import BUS.Services.QLDichVuServices;
import BUS.Utils.MsgBox;
import DAL.Entities.LoaiDichVu;
import DAL.Services.DichVuServices;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class Frm_DichVu extends javax.swing.JFrame {

    IQLDichVuServices _iDichVu = new QLDichVuServices();
    IQLAllDichVuServices _iAllDichVu = new QLAllDichVuServices();
    DichVuServices _dv = new DichVuServices();
    int _index = 0;
    ImageIcon iconTick = new ImageIcon("src\\PL\\Icon\\Tick.png");
    ImageIcon iconTrash = new ImageIcon("src\\PL\\Icon\\Trash.png");
    ImageIcon iconError = new ImageIcon("src\\PL\\Icon\\Problem.png");

    public Frm_DichVu() {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        tbldichvu.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
//        tbldichvu.getTableHeader().setBackground(new Color(34, 47, 62));
//        tbldichvu.getTableHeader().setForeground(new Color(255, 255, 255));
        filltoCombo();
        filltoTable();
        showForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtiddv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbotenloaidv = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txttendv = new javax.swing.JTextField();
        txtdongia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtghichu = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldichvu = new javax.swing.JTable();
        btnthem = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        btnthoat = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnexportexcel = new javax.swing.JButton();
        btnimportexcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ DỊCH VỤ");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(10, 189, 227));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã dịch vụ");

        txtiddv.setEditable(false);
        txtiddv.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtiddv.setBorder(null);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tên loại dịch vụ");

        cbotenloaidv.setBorder(null);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tên dịch vụ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Đơn giá");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ghi chú");

        txttendv.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txttendv.setBorder(null);

        txtdongia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtdongia.setBorder(null);

        txtghichu.setColumns(20);
        txtghichu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtghichu.setRows(5);
        txtghichu.setBorder(null);
        jScrollPane1.setViewportView(txtghichu);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);

        tbldichvu.setAutoCreateRowSorter(true);
        tbldichvu.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        tbldichvu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã dịch vụ", "Tên loại dịch vụ", "Tên dịch vụ", "Đơn giá", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbldichvu.setFocusable(false);
        tbldichvu.setGridColor(new java.awt.Color(255, 255, 255));
        tbldichvu.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tbldichvu.setRowHeight(24);
        tbldichvu.setSelectionBackground(new java.awt.Color(10, 189, 227));
        tbldichvu.setShowVerticalLines(false);
        tbldichvu.getTableHeader().setReorderingAllowed(false);
        tbldichvu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldichvuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbldichvu);

        btnthem.setBackground(new java.awt.Color(34, 47, 62));
        btnthem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnthem.setForeground(new java.awt.Color(255, 255, 255));
        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnsua.setBackground(new java.awt.Color(34, 47, 62));
        btnsua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnsua.setForeground(new java.awt.Color(255, 255, 255));
        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnxoa.setBackground(new java.awt.Color(34, 47, 62));
        btnxoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnxoa.setForeground(new java.awt.Color(255, 255, 255));
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnclear.setBackground(new java.awt.Color(34, 47, 62));
        btnclear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnclear.setForeground(new java.awt.Color(255, 255, 255));
        btnclear.setText("Làm mới");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnthoat.setBackground(new java.awt.Color(34, 47, 62));
        btnthoat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnthoat.setForeground(new java.awt.Color(255, 255, 255));
        btnthoat.setText("Thoát");
        btnthoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatActionPerformed(evt);
            }
        });

        txtsearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtsearch.setBorder(null);
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tìm kiếm theo mã");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("DANH SÁCH CÁC LOẠI DỊCH VỤ");

        btnexportexcel.setBackground(new java.awt.Color(34, 47, 62));
        btnexportexcel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnexportexcel.setForeground(new java.awt.Color(255, 255, 255));
        btnexportexcel.setText("Export Excel");
        btnexportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexportexcelActionPerformed(evt);
            }
        });

        btnimportexcel.setBackground(new java.awt.Color(34, 47, 62));
        btnimportexcel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnimportexcel.setForeground(new java.awt.Color(255, 255, 255));
        btnimportexcel.setText("Import Excel");
        btnimportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportexcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnthem)
                    .addComponent(btnsua)
                    .addComponent(btnxoa)
                    .addComponent(btnclear)
                    .addComponent(btnthoat)
                    .addComponent(btnexportexcel)
                    .addComponent(btnimportexcel))
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txttendv)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(txtiddv, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                            .addComponent(cbotenloaidv, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdongia, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(82, 82, 82))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(397, 397, 397))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnclear, btnexportexcel, btnsua, btnthem, btnthoat, btnxoa});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtdongia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtiddv, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cbotenloaidv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txttendv, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnthem)
                        .addGap(18, 18, 18)
                        .addComponent(btnsua)
                        .addGap(18, 18, 18)
                        .addComponent(btnxoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnclear)
                        .addGap(18, 18, 18)
                        .addComponent(btnthoat)
                        .addGap(18, 18, 18)
                        .addComponent(btnexportexcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnimportexcel)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtsearch, txttendv});

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 780));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbldichvuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldichvuMouseClicked
        try {
            _index = tbldichvu.getSelectedRow();
            showForm();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tbldichvuMouseClicked

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        clear();
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        try {
            if (checkAddAll() == false) {
                return;
            } else {
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn thêm dịch vụ ?");
                if (choice != JOptionPane.YES_OPTION) {
                    return;
                }
                _iDichVu.add(txtiddv, cbotenloaidv, txttendv, txtdongia, txtghichu);
//            _iDichVu.fillToTable(tbldichvu);
                _iAllDichVu.fillToTableLoaiDichVu(tbldichvu);
                JOptionPane.showMessageDialog(this, "Thêm dịch vụ thành công !", "Thông báo", 0, iconTick);
                clear();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Không thể thêm mới!");
        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed

        try {
            if (checkEditAll() == false) {
                return;
            } else {
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cập nhật dịch vụ ?");
                if (choice != JOptionPane.YES_OPTION) {
                    return;
                }
                _iDichVu.edit(cbotenloaidv, txttendv, txtdongia, txtghichu, txtiddv);
//            _iDichVu.fillToTable(tbldichvu);
                _iAllDichVu.fillToTableLoaiDichVu(tbldichvu);
                JOptionPane.showMessageDialog(this, "Cập nhật dịch vụ thành công !", "Thông báo", 0, iconTick);
                clear();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Không thể sửa!");
        }
    }//GEN-LAST:event_btnsuaActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        try {
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa dịch vụ ?");
            if (choice != JOptionPane.YES_OPTION) {
                return;
            }
            _iDichVu.delete(txtiddv);
//        _iDichVu.fillToTable(tbldichvu);
            _iAllDichVu.fillToTableLoaiDichVu(tbldichvu);
            JOptionPane.showMessageDialog(this, "Xóa dịch vụ thành công !", "Thông báo", 0, iconTrash);
            clear();
        } catch (Exception e) {
            MsgBox.alert(this, "Không thể xóa!");
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btnthoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnthoatActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        fillSearch();
    }//GEN-LAST:event_txtsearchKeyReleased

    private void btnexportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexportexcelActionPerformed
        exportExcel();

    }//GEN-LAST:event_btnexportexcelActionPerformed

    private void btnimportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportexcelActionPerformed
        importExcel();
    }//GEN-LAST:event_btnimportexcelActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Frm_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Frm_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Frm_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Frm_DichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_DichVu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnexportexcel;
    private javax.swing.JButton btnimportexcel;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btnthoat;
    private javax.swing.JButton btnxoa;
    private javax.swing.JComboBox<String> cbotenloaidv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbldichvu;
    private javax.swing.JTextField txtdongia;
    private javax.swing.JTextArea txtghichu;
    private javax.swing.JTextField txtiddv;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txttendv;
    // End of variables declaration//GEN-END:variables

    private void filltoCombo() {
        _iDichVu.filltoCombo(cbotenloaidv);
    }

    private void filltoTable() {
        // _iDichVu.fillToTable(tbldichvu);
        _iAllDichVu.fillToTableLoaiDichVu(tbldichvu);
    }

    private void showForm() {
        txtiddv.setText(tbldichvu.getValueAt(_index, 0).toString());
        cbotenloaidv.getModel().setSelectedItem(tbldichvu.getValueAt(_index, 1).toString());
        txttendv.setText(tbldichvu.getValueAt(_index, 2).toString());
        txtdongia.setText(tbldichvu.getValueAt(_index, 3).toString());
        txtghichu.setText(tbldichvu.getValueAt(_index, 4).toString());
    }

    private boolean checkAddAll() {
        String madv = txtiddv.getText();
        float dongia;
        String tendv = txttendv.getText();
        String ghichu = txtghichu.getText();
        try {
            dongia = Float.parseFloat(txtdongia.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng đơn giá !", "Thông báo", 0, iconError);
            return false;
        }
        if (dongia <= 0) {
            JOptionPane.showMessageDialog(this, "Đơn giá phải lớn hơn 0 !", "Thông báo", 0, iconError);
            return false;
        }
        if (madv.length() == 0 || tendv.length() == 0 || ghichu.length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống dữ liệu !", "Thông báo", 0, iconError);
            return false;
        }
        if (_dv.getListDichVuByID(madv) != null) {
            JOptionPane.showMessageDialog(this, "Mã dịch vụ đã tồn tại !", "Thông báo", 0, iconError);
            return false;
        }
        return true;
    }

    private boolean checkEditAll() {
        String madv = txtiddv.getText();
        float dongia;
        String tendv = txttendv.getText();
        String ghichu = txtghichu.getText();
        if (madv.length() == 0 || tendv.length() == 0 || ghichu.length() == 0 || txtdongia.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống dữ liệu !", "Thông báo", 0, iconError);
            return false;
        }
        try {
            dongia = Float.parseFloat(txtdongia.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng đơn giá !", "Thông báo", 0, iconError);
            return false;
        }
        if (dongia <= 0) {
            JOptionPane.showMessageDialog(this, "Đơn giá phải lớn hơn 0 !", "Thông báo", 0, iconError);
            return false;
        }
        return true;
    }

    private void fillSearch() {
        _iDichVu.filltoSearch(tbldichvu, txtsearch);
    }

    private void clear() {
        txtdongia.setText("");
        txtghichu.setText("");
        txtiddv.setText("");
        txttendv.setText("");
        cbotenloaidv.setSelectedItem(0);
        txtiddv.setEditable(true);
    }

    private void exportExcel() {
        JFileChooser jf = new JFileChooser();
        // Chỉ hiển thị các file excel
        FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xslm");
        jf.setFileFilter(excelFileNameExtensionFilter);
        int chon = jf.showSaveDialog(this);
        if (chon == JFileChooser.APPROVE_OPTION) {
            String filename = jf.getSelectedFile().getAbsolutePath();
            try {
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("service");
                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tbldichvu.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tbldichvu.getColumnName(i));
                }
                for (int j = 0; j < tbldichvu.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < tbldichvu.getColumnCount(); k++) {
                        Cell cell = row.createCell(k);
                        if (tbldichvu.getValueAt(j, k) != null) {
                            cell.setCellValue(tbldichvu.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File(filename + ".xlsx"));
                wb.write(out);
                wb.close();
                out.close();
                JOptionPane.showMessageDialog(this, "Export file thành công !", "Thông báo", 0, iconTick);
            } catch (FileNotFoundException e) {
                System.out.println(e);
            } catch (IOException io) {
                System.out.println(io);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn đã hủy export file !", "Thông báo", 0, iconError);
        }
    }

    private void importExcel() {
        DefaultTableModel model = (DefaultTableModel) tbldichvu.getModel();
        model.setRowCount(0);
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelImportWb = null;
        JFileChooser jf = new JFileChooser();
        // Chỉ hiển thị các file excel
        FileNameExtensionFilter excelFileNameExtensionFilter = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xslm");
        jf.setFileFilter(excelFileNameExtensionFilter);
        int choice = jf.showOpenDialog(null);
        if (choice == JFileChooser.APPROVE_OPTION) {
            try {
                File excelFile = jf.getSelectedFile().getAbsoluteFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);
                excelImportWb = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelImportWb.getSheetAt(0);

                for (int i = 1; i < excelSheet.getLastRowNum() + 1; i++) {
                    XSSFRow excelRow = excelSheet.getRow(i);
                    XSSFCell madv = excelRow.getCell(0);
                    XSSFCell maloaidv = excelRow.getCell(1);
                    XSSFCell tendv = excelRow.getCell(2);
                    XSSFCell dongia = excelRow.getCell(3);
                    XSSFCell ghichu = excelRow.getCell(4);
                    model.addRow(new Object[]{
                        madv, maloaidv, tendv, dongia, ghichu
                    });
                }
                JOptionPane.showMessageDialog(this, "Import file thành công !", "Thông báo", 0, iconTick);
            } catch (FileNotFoundException e) {
                System.out.println(e);
            } catch (IOException io) {
                System.out.println(io);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn đã hủy import file !", "Thông báo", 0, iconError);
        }
    }
}
